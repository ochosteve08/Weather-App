{"version":3,"sources":["components/Api.js","components/search/Search.js","App.js","index.js"],"names":["geoApiOptions","method","headers","X-RapidAPI-Key","X-RapidAPI-Host","Search","_ref","onSearchChange","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","esm","placeholder","debounceTimeout","value","onChange","searchData","loadOptions","inputValue","fetch","concat","then","response","json","options","data","map","city","latitude","longitude","label","name","countryCode","catch","err","console","error","App","className","search_Search","log","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"gPAEaA,EAAgB,CAC5BC,OAAQ,MACRC,QAAS,CACRC,iBAAkB,qDAClBC,kBAAmB,8BCwCNC,EAzCA,SAAHC,GAAuB,IAAlBC,EAAcD,EAAdC,eAEbC,EAE2BC,mBAAS,MAAKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCK,EAAMH,EAAA,GAACI,EAASJ,EAAA,GAsBvB,OACIK,EAAAC,EAAAC,cAACC,EAAA,EAAa,CACVC,YAAY,oBACZC,gBAAiB,IACjBC,MAAOR,EACPS,SAzBe,SAACC,GAEpBT,EAAUS,GACVhB,EAAegB,IAuBXC,YApBU,SAACC,GAEf,OAAQC,MAAK,GAAAC,ODTK,2CCSU,8CAAAA,OAA6CF,GAAezB,GAC9F4B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,MAAO,CAACE,QAASF,EAASG,KAAKC,IAAI,SAAAC,GAC9C,MAAQ,CACJb,MAAK,GAAAM,OAAKO,EAAKC,SAAQ,KAAAR,OAAIO,EAAKE,WAChCC,MAAK,GAAAV,OAAKO,EAAKI,KAAI,KAAAX,OAAIO,EAAKK,mBAGtCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,SCNdG,MAhBf,WAKE,OACE7B,EAAAC,EAAAC,cAAA,OAAK4B,UAAU,aAEb9B,EAAAC,EAAAC,cAAC6B,EAAM,CACLvC,eARuB,SAACgB,GAC1BmB,QAAQK,IAAIxB,QCDLyB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,WAAU,KACftC,EAAAC,EAAAC,cAACqC,EAAG","file":"static/js/main.03b84cb7.chunk.js","sourcesContent":["\r\n\r\nexport const geoApiOptions = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\t'X-RapidAPI-Key': '7eeb36ea13msha5843da13d3bef2p1e7f4djsn4f0ead6d888f',\r\n\t\t'X-RapidAPI-Host': 'wft-geo-db.p.rapidapi.com'\r\n\t}\r\n};\r\n\r\nexport const GEO_API_URL =\"https://wft-geo-db.p.rapidapi.com/v1/geo\";\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\nimport { GEO_API_URL,  geoApiOptions } from \"../Api\";\r\n\r\n\r\nconst Search = ({onSearchChange})=>{\r\n\r\n    // console.log(props.onSearchChange)\r\n\r\n    const [search,setSearch] = useState(null);\r\n\r\n    const handleOnChange = (searchData)=>{\r\n\r\n        setSearch(searchData);\r\n        onSearchChange(searchData);\r\n\r\n    };\r\n    const loadOptions=(inputValue)=>{\r\n\r\n        return  fetch(`${GEO_API_URL}/cities?minPopulation=100000 & namePrefix=${inputValue}`,  geoApiOptions)\r\n\t.then(response => response.json())\r\n\t.then(response =>{return {options: response.data.map(city=>{\r\n        return ({\r\n            value: `${city.latitude} ${city.longitude}`,\r\n            label: `${city.name} ${city.countryCode}`,\r\n        })\r\n    })}})\r\n\t.catch(err => console.error(err));\r\n\r\n    }\r\n\r\n    return (\r\n        <AsyncPaginate\r\n            placeholder=\"Search for cities\"\r\n            debounceTimeout={600}\r\n            value={search}\r\n            onChange= {handleOnChange}\r\n            loadOptions = {loadOptions}\r\n\r\n        />\r\n         \r\n\r\n        \r\n            )\r\n}\r\n\r\nexport default Search;","\nimport React from 'react';\nimport './App.css';\nimport Search from './components/search/Search';\n\nfunction App() {\n    const handleOnSearchChange=(searchData)=>{\n      console.log(searchData);\n    }\n\n  return (\n    <div className='container' >\n      \n      <Search \n        onSearchChange = {handleOnSearchChange}\n      />\n       \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}